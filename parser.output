State 27 conflicts: 1 shift/reduce
State 33 conflicts: 1 shift/reduce
State 34 conflicts: 1 shift/reduce
State 43 conflicts: 5 shift/reduce
State 46 conflicts: 5 shift/reduce
State 48 conflicts: 5 shift/reduce
State 67 conflicts: 2 shift/reduce
State 68 conflicts: 2 shift/reduce
State 76 conflicts: 6 reduce/reduce
State 89 conflicts: 17 reduce/reduce
State 145 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ProcedureList

    2 ProcedureList: Procedure
    3              | Procedure ProcedureList

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    5 ParamList: ε
    6          | Param
    7          | ParamList SEMICOLON Param

    8 Param: IDList COLON Type

    9 IDList: IDENTIFIER
   10       | IDENTIFIER COMMA IDList

   11 Body: OptionalDeclarations OptionalStatements

   12 OptionalDeclarations: ε
   13                     | Declarations

   14 OptionalStatements: ε
   15                   | Statements

   16 OptionalReturn: ε
   17               | RETURN Expression SEMICOLON

   18 Block: LBRACE OptionalDeclarations OptionalStatements RBRACE

   19 Declarations: Declaration
   20             | Declaration Declarations

   21 Declaration: VAR SingleVarDeclaration SEMICOLON
   22            | VAR MultiVarDeclaration SEMICOLON
   23            | Procedure

   24 SingleVarDeclaration: IDENTIFIER COLON STRING LBRACKET INT_LITERAL RBRACKET
   25                     | IDENTIFIER COLON Type

   26 MultiVarDeclaration: IDList COLON Type
   27                    | IDList COLON STRING LBRACKET INT_LITERAL RBRACKET

   28 Statements: Statement
   29           | Statement Statements

   30 Statement: IDENTIFIER EQUAL Expression SEMICOLON
   31          | IDENTIFIER EQUAL STRING_LITERAL SEMICOLON
   32          | IDENTIFIER LBRACKET Expression RBRACKET EQUAL Expression SEMICOLON
   33          | IDENTIFIER LBRACKET Expression RBRACKET EQUAL STRING_LITERAL SEMICOLON
   34          | IF LPAREN Expression RPAREN Block
   35          | IF LPAREN Expression RPAREN Block ELSE Block
   36          | WHILE LPAREN Expression RPAREN Block
   37          | LBRACE Statements RBRACE
   38          | Block OptionalStatements
   39          | Procedure

   40 Expression: Expression OR Expression
   41           | Expression AND Expression
   42           | Expression EQUALS Expression
   43           | Expression NOTEQUAL Expression
   44           | Expression LT Expression
   45           | Expression LTE Expression
   46           | Expression GT Expression
   47           | Expression GTE Expression
   48           | AdditiveExpr

   49 AdditiveExpr: AdditiveExpr PLUS MultiplicativeExpr
   50             | AdditiveExpr MINUS MultiplicativeExpr
   51             | MultiplicativeExpr

   52 MultiplicativeExpr: MultiplicativeExpr MUL UnaryExpr
   53                   | MultiplicativeExpr DIV UnaryExpr
   54                   | UnaryExpr

   55 UnaryExpr: NOT UnaryExpr
   56          | MINUS UnaryExpr
   57          | AMP Variable
   58          | DEREFERENCE IDENTIFIER
   59          | DEREFERENCE Expression
   60          | DEREFERENCE IDENTIFIER LBRACKET INT_LITERAL RBRACKET
   61          | BAR Expression BAR
   62          | PrimaryExpr

   63 Variable: IDENTIFIER
   64         | IDENTIFIER LBRACKET Expression RBRACKET

   65 PrimaryExpr: IDENTIFIER
   66            | INT_LITERAL
   67            | LPAREN Expression RPAREN
   68            | IDENTIFIER LPAREN ArgumentList RPAREN
   69            | IDENTIFIER LBRACKET Expression RBRACKET
   70            | CHAR_LITERAL
   71            | TRUE
   72            | FALSE
   73            | NULLTOKEN

   74 ArgumentList: ε
   75             | Expression
   76             | Expression COMMA ArgumentList

   77 Type: BOOLEAN
   78     | CHAR
   79     | INTEGER
   80     | INTPTR
   81     | CHARPTR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BOOLEAN (258) 77
    CHAR (259) 78
    INTEGER (260) 79
    STRING (261) 24 27
    INTPTR (262) 80
    CHARPTR (263) 81
    IF (264) 34 35
    ELSE (265) 35
    WHILE (266) 36
    VAR (267) 21 22
    PROCEDURE (268) 4
    RETURN (269) 4 17
    NULLTOKEN (270) 73
    AND (271) 41
    DIV (272) 53
    EQUAL (273) 30 31 32 33
    EQUALS (274) 42
    GT (275) 46
    GTE (276) 47
    LT (277) 44
    LTE (278) 45
    MINUS (279) 50 56
    NOT (280) 55
    NOTEQUAL (281) 43
    OR (282) 40
    PLUS (283) 49
    MUL (284) 52
    AMP (285) 57
    DEREFERENCE (286) 58 59 60
    TRUE (287) 71
    FALSE (288) 72
    INT_LITERAL (289) 24 27 60 66
    IDENTIFIER (290) 4 9 10 24 25 30 31 32 33 58 60 63 64 65 68 69
    COMMA (291) 10 76
    COLON (292) 8 24 25 26 27
    UMINUS (293)
    LBRACE (294) 4 18 37
    RBRACE (295) 4 18 37
    SEMICOLON (296) 7 17 21 22 30 31 32 33
    LPAREN (297) 4 34 35 36 67 68
    RPAREN (298) 4 34 35 36 67 68
    BAR (299) 61
    LBRACKET (300) 24 27 32 33 60 64 69
    RBRACKET (301) 24 27 32 33 60 64 69
    STRING_LITERAL (302) 31 33
    CHAR_LITERAL (303) 70


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    Program (50)
        on left: 1
        on right: 0
    ProcedureList (51)
        on left: 2 3
        on right: 1 3
    Procedure (52)
        on left: 4
        on right: 2 3 23 39
    ParamList (53)
        on left: 5 6 7
        on right: 4 7
    Param (54)
        on left: 8
        on right: 6 7
    IDList (55)
        on left: 9 10
        on right: 8 10 26 27
    Body (56)
        on left: 11
        on right: 4
    OptionalDeclarations (57)
        on left: 12 13
        on right: 11 18
    OptionalStatements (58)
        on left: 14 15
        on right: 11 18 38
    OptionalReturn (59)
        on left: 16 17
        on right: 4
    Block (60)
        on left: 18
        on right: 34 35 36 38
    Declarations (61)
        on left: 19 20
        on right: 13 20
    Declaration (62)
        on left: 21 22 23
        on right: 19 20
    SingleVarDeclaration (63)
        on left: 24 25
        on right: 21
    MultiVarDeclaration (64)
        on left: 26 27
        on right: 22
    Statements (65)
        on left: 28 29
        on right: 15 29 37
    Statement (66)
        on left: 30 31 32 33 34 35 36 37 38 39
        on right: 28 29
    Expression (67)
        on left: 40 41 42 43 44 45 46 47 48
        on right: 17 30 32 33 34 35 36 40 41 42 43 44 45 46 47 59 61 64 67 69 75 76
    AdditiveExpr (68)
        on left: 49 50 51
        on right: 48 49 50
    MultiplicativeExpr (69)
        on left: 52 53 54
        on right: 49 50 51 52 53
    UnaryExpr (70)
        on left: 55 56 57 58 59 60 61 62
        on right: 52 53 54 55 56
    Variable (71)
        on left: 63 64
        on right: 57
    PrimaryExpr (72)
        on left: 65 66 67 68 69 70 71 72 73
        on right: 62
    ArgumentList (73)
        on left: 74 75 76
        on right: 68 76
    Type (74)
        on left: 77 78 79 80 81
        on right: 4 8 25 26


State 0

    0 $accept: • Program $end

    PROCEDURE  shift, and go to state 1

    Program        go to state 2
    ProcedureList  go to state 3
    Procedure      go to state 4


State 1

    4 Procedure: PROCEDURE • IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 6


State 3

    1 Program: ProcedureList •

    $default  reduce using rule 1 (Program)


State 4

    2 ProcedureList: Procedure •
    3              | Procedure • ProcedureList

    PROCEDURE  shift, and go to state 1

    $default  reduce using rule 2 (ProcedureList)

    ProcedureList  go to state 7
    Procedure      go to state 4


State 5

    4 Procedure: PROCEDURE IDENTIFIER • LPAREN ParamList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    LPAREN  shift, and go to state 8


State 6

    0 $accept: Program $end •

    $default  accept


State 7

    3 ProcedureList: Procedure ProcedureList •

    $default  reduce using rule 3 (ProcedureList)


State 8

    4 Procedure: PROCEDURE IDENTIFIER LPAREN • ParamList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 5 (ParamList)

    ParamList  go to state 10
    Param      go to state 11
    IDList     go to state 12


State 9

    9 IDList: IDENTIFIER •
   10       | IDENTIFIER • COMMA IDList

    COMMA  shift, and go to state 13

    $default  reduce using rule 9 (IDList)


State 10

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList • RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE
    7 ParamList: ParamList • SEMICOLON Param

    SEMICOLON  shift, and go to state 14
    RPAREN     shift, and go to state 15


State 11

    6 ParamList: Param •

    $default  reduce using rule 6 (ParamList)


State 12

    8 Param: IDList • COLON Type

    COLON  shift, and go to state 16


State 13

   10 IDList: IDENTIFIER COMMA • IDList

    IDENTIFIER  shift, and go to state 9

    IDList  go to state 17


State 14

    7 ParamList: ParamList SEMICOLON • Param

    IDENTIFIER  shift, and go to state 9

    Param   go to state 18
    IDList  go to state 12


State 15

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN • RETURN Type LBRACE Body OptionalReturn RBRACE

    RETURN  shift, and go to state 19


State 16

    8 Param: IDList COLON • Type

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    INTPTR   shift, and go to state 23
    CHARPTR  shift, and go to state 24

    Type  go to state 25


State 17

   10 IDList: IDENTIFIER COMMA IDList •

    $default  reduce using rule 10 (IDList)


State 18

    7 ParamList: ParamList SEMICOLON Param •

    $default  reduce using rule 7 (ParamList)


State 19

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN • Type LBRACE Body OptionalReturn RBRACE

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    INTPTR   shift, and go to state 23
    CHARPTR  shift, and go to state 24

    Type  go to state 26


State 20

   77 Type: BOOLEAN •

    $default  reduce using rule 77 (Type)


State 21

   78 Type: CHAR •

    $default  reduce using rule 78 (Type)


State 22

   79 Type: INTEGER •

    $default  reduce using rule 79 (Type)


State 23

   80 Type: INTPTR •

    $default  reduce using rule 80 (Type)


State 24

   81 Type: CHARPTR •

    $default  reduce using rule 81 (Type)


State 25

    8 Param: IDList COLON Type •

    $default  reduce using rule 8 (Param)


State 26

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type • LBRACE Body OptionalReturn RBRACE

    LBRACE  shift, and go to state 27


State 27

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE • Body OptionalReturn RBRACE

    VAR        shift, and go to state 28
    PROCEDURE  shift, and go to state 1

    PROCEDURE  [reduce using rule 12 (OptionalDeclarations)]
    $default   reduce using rule 12 (OptionalDeclarations)

    Procedure             go to state 29
    Body                  go to state 30
    OptionalDeclarations  go to state 31
    Declarations          go to state 32
    Declaration           go to state 33


State 28

   21 Declaration: VAR • SingleVarDeclaration SEMICOLON
   22            | VAR • MultiVarDeclaration SEMICOLON

    IDENTIFIER  shift, and go to state 34

    IDList                go to state 35
    SingleVarDeclaration  go to state 36
    MultiVarDeclaration   go to state 37


State 29

   23 Declaration: Procedure •

    $default  reduce using rule 23 (Declaration)


State 30

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE Body • OptionalReturn RBRACE

    RETURN  shift, and go to state 38

    $default  reduce using rule 16 (OptionalReturn)

    OptionalReturn  go to state 39


State 31

   11 Body: OptionalDeclarations • OptionalStatements

    IF          shift, and go to state 40
    WHILE       shift, and go to state 41
    PROCEDURE   shift, and go to state 1
    IDENTIFIER  shift, and go to state 42
    LBRACE      shift, and go to state 43

    $default  reduce using rule 14 (OptionalStatements)

    Procedure           go to state 44
    OptionalStatements  go to state 45
    Block               go to state 46
    Statements          go to state 47
    Statement           go to state 48


State 32

   13 OptionalDeclarations: Declarations •

    $default  reduce using rule 13 (OptionalDeclarations)


State 33

   19 Declarations: Declaration •
   20             | Declaration • Declarations

    VAR        shift, and go to state 28
    PROCEDURE  shift, and go to state 1

    PROCEDURE  [reduce using rule 19 (Declarations)]
    $default   reduce using rule 19 (Declarations)

    Procedure     go to state 29
    Declarations  go to state 49
    Declaration   go to state 33


State 34

    9 IDList: IDENTIFIER •
   10       | IDENTIFIER • COMMA IDList
   24 SingleVarDeclaration: IDENTIFIER • COLON STRING LBRACKET INT_LITERAL RBRACKET
   25                     | IDENTIFIER • COLON Type

    COMMA  shift, and go to state 13
    COLON  shift, and go to state 50

    COLON  [reduce using rule 9 (IDList)]


State 35

   26 MultiVarDeclaration: IDList • COLON Type
   27                    | IDList • COLON STRING LBRACKET INT_LITERAL RBRACKET

    COLON  shift, and go to state 51


State 36

   21 Declaration: VAR SingleVarDeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 52


State 37

   22 Declaration: VAR MultiVarDeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 53


State 38

   17 OptionalReturn: RETURN • Expression SEMICOLON

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 66
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 39

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE Body OptionalReturn • RBRACE

    RBRACE  shift, and go to state 71


State 40

   34 Statement: IF • LPAREN Expression RPAREN Block
   35          | IF • LPAREN Expression RPAREN Block ELSE Block

    LPAREN  shift, and go to state 72


State 41

   36 Statement: WHILE • LPAREN Expression RPAREN Block

    LPAREN  shift, and go to state 73


State 42

   30 Statement: IDENTIFIER • EQUAL Expression SEMICOLON
   31          | IDENTIFIER • EQUAL STRING_LITERAL SEMICOLON
   32          | IDENTIFIER • LBRACKET Expression RBRACKET EQUAL Expression SEMICOLON
   33          | IDENTIFIER • LBRACKET Expression RBRACKET EQUAL STRING_LITERAL SEMICOLON

    EQUAL     shift, and go to state 74
    LBRACKET  shift, and go to state 75


State 43

   18 Block: LBRACE • OptionalDeclarations OptionalStatements RBRACE
   37 Statement: LBRACE • Statements RBRACE

    IF          shift, and go to state 40
    WHILE       shift, and go to state 41
    VAR         shift, and go to state 28
    PROCEDURE   shift, and go to state 1
    IDENTIFIER  shift, and go to state 42
    LBRACE      shift, and go to state 43

    IF          [reduce using rule 12 (OptionalDeclarations)]
    WHILE       [reduce using rule 12 (OptionalDeclarations)]
    PROCEDURE   [reduce using rule 12 (OptionalDeclarations)]
    IDENTIFIER  [reduce using rule 12 (OptionalDeclarations)]
    LBRACE      [reduce using rule 12 (OptionalDeclarations)]
    $default    reduce using rule 12 (OptionalDeclarations)

    Procedure             go to state 76
    OptionalDeclarations  go to state 77
    Block                 go to state 46
    Declarations          go to state 32
    Declaration           go to state 33
    Statements            go to state 78
    Statement             go to state 48


State 44

   39 Statement: Procedure •

    $default  reduce using rule 39 (Statement)


State 45

   11 Body: OptionalDeclarations OptionalStatements •

    $default  reduce using rule 11 (Body)


State 46

   38 Statement: Block • OptionalStatements

    IF          shift, and go to state 40
    WHILE       shift, and go to state 41
    PROCEDURE   shift, and go to state 1
    IDENTIFIER  shift, and go to state 42
    LBRACE      shift, and go to state 43

    IF          [reduce using rule 14 (OptionalStatements)]
    WHILE       [reduce using rule 14 (OptionalStatements)]
    PROCEDURE   [reduce using rule 14 (OptionalStatements)]
    IDENTIFIER  [reduce using rule 14 (OptionalStatements)]
    LBRACE      [reduce using rule 14 (OptionalStatements)]
    $default    reduce using rule 14 (OptionalStatements)

    Procedure           go to state 44
    OptionalStatements  go to state 79
    Block               go to state 46
    Statements          go to state 47
    Statement           go to state 48


State 47

   15 OptionalStatements: Statements •

    $default  reduce using rule 15 (OptionalStatements)


State 48

   28 Statements: Statement •
   29           | Statement • Statements

    IF          shift, and go to state 40
    WHILE       shift, and go to state 41
    PROCEDURE   shift, and go to state 1
    IDENTIFIER  shift, and go to state 42
    LBRACE      shift, and go to state 43

    IF          [reduce using rule 28 (Statements)]
    WHILE       [reduce using rule 28 (Statements)]
    PROCEDURE   [reduce using rule 28 (Statements)]
    IDENTIFIER  [reduce using rule 28 (Statements)]
    LBRACE      [reduce using rule 28 (Statements)]
    $default    reduce using rule 28 (Statements)

    Procedure   go to state 44
    Block       go to state 46
    Statements  go to state 80
    Statement   go to state 48


State 49

   20 Declarations: Declaration Declarations •

    $default  reduce using rule 20 (Declarations)


State 50

   24 SingleVarDeclaration: IDENTIFIER COLON • STRING LBRACKET INT_LITERAL RBRACKET
   25                     | IDENTIFIER COLON • Type

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    STRING   shift, and go to state 81
    INTPTR   shift, and go to state 23
    CHARPTR  shift, and go to state 24

    Type  go to state 82


State 51

   26 MultiVarDeclaration: IDList COLON • Type
   27                    | IDList COLON • STRING LBRACKET INT_LITERAL RBRACKET

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    STRING   shift, and go to state 83
    INTPTR   shift, and go to state 23
    CHARPTR  shift, and go to state 24

    Type  go to state 84


State 52

   21 Declaration: VAR SingleVarDeclaration SEMICOLON •

    $default  reduce using rule 21 (Declaration)


State 53

   22 Declaration: VAR MultiVarDeclaration SEMICOLON •

    $default  reduce using rule 22 (Declaration)


State 54

   73 PrimaryExpr: NULLTOKEN •

    $default  reduce using rule 73 (PrimaryExpr)


State 55

   56 UnaryExpr: MINUS • UnaryExpr

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    UnaryExpr    go to state 85
    PrimaryExpr  go to state 70


State 56

   55 UnaryExpr: NOT • UnaryExpr

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    UnaryExpr    go to state 86
    PrimaryExpr  go to state 70


State 57

   57 UnaryExpr: AMP • Variable

    IDENTIFIER  shift, and go to state 87

    Variable  go to state 88


State 58

   58 UnaryExpr: DEREFERENCE • IDENTIFIER
   59          | DEREFERENCE • Expression
   60          | DEREFERENCE • IDENTIFIER LBRACKET INT_LITERAL RBRACKET

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 89
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 90
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 59

   71 PrimaryExpr: TRUE •

    $default  reduce using rule 71 (PrimaryExpr)


State 60

   72 PrimaryExpr: FALSE •

    $default  reduce using rule 72 (PrimaryExpr)


State 61

   66 PrimaryExpr: INT_LITERAL •

    $default  reduce using rule 66 (PrimaryExpr)


State 62

   65 PrimaryExpr: IDENTIFIER •
   68            | IDENTIFIER • LPAREN ArgumentList RPAREN
   69            | IDENTIFIER • LBRACKET Expression RBRACKET

    LPAREN    shift, and go to state 91
    LBRACKET  shift, and go to state 92

    $default  reduce using rule 65 (PrimaryExpr)


State 63

   67 PrimaryExpr: LPAREN • Expression RPAREN

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 93
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 64

   61 UnaryExpr: BAR • Expression BAR

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 94
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 65

   70 PrimaryExpr: CHAR_LITERAL •

    $default  reduce using rule 70 (PrimaryExpr)


State 66

   17 OptionalReturn: RETURN Expression • SEMICOLON
   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    AND        shift, and go to state 95
    EQUALS     shift, and go to state 96
    GT         shift, and go to state 97
    GTE        shift, and go to state 98
    LT         shift, and go to state 99
    LTE        shift, and go to state 100
    NOTEQUAL   shift, and go to state 101
    OR         shift, and go to state 102
    SEMICOLON  shift, and go to state 103


State 67

   48 Expression: AdditiveExpr •
   49 AdditiveExpr: AdditiveExpr • PLUS MultiplicativeExpr
   50             | AdditiveExpr • MINUS MultiplicativeExpr

    MINUS  shift, and go to state 104
    PLUS   shift, and go to state 105

    MINUS     [reduce using rule 48 (Expression)]
    PLUS      [reduce using rule 48 (Expression)]
    $default  reduce using rule 48 (Expression)


State 68

   51 AdditiveExpr: MultiplicativeExpr •
   52 MultiplicativeExpr: MultiplicativeExpr • MUL UnaryExpr
   53                   | MultiplicativeExpr • DIV UnaryExpr

    DIV  shift, and go to state 106
    MUL  shift, and go to state 107

    DIV       [reduce using rule 51 (AdditiveExpr)]
    MUL       [reduce using rule 51 (AdditiveExpr)]
    $default  reduce using rule 51 (AdditiveExpr)


State 69

   54 MultiplicativeExpr: UnaryExpr •

    $default  reduce using rule 54 (MultiplicativeExpr)


State 70

   62 UnaryExpr: PrimaryExpr •

    $default  reduce using rule 62 (UnaryExpr)


State 71

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE •

    $default  reduce using rule 4 (Procedure)


State 72

   34 Statement: IF LPAREN • Expression RPAREN Block
   35          | IF LPAREN • Expression RPAREN Block ELSE Block

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 108
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 73

   36 Statement: WHILE LPAREN • Expression RPAREN Block

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 109
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 74

   30 Statement: IDENTIFIER EQUAL • Expression SEMICOLON
   31          | IDENTIFIER EQUAL • STRING_LITERAL SEMICOLON

    NULLTOKEN       shift, and go to state 54
    MINUS           shift, and go to state 55
    NOT             shift, and go to state 56
    AMP             shift, and go to state 57
    DEREFERENCE     shift, and go to state 58
    TRUE            shift, and go to state 59
    FALSE           shift, and go to state 60
    INT_LITERAL     shift, and go to state 61
    IDENTIFIER      shift, and go to state 62
    LPAREN          shift, and go to state 63
    BAR             shift, and go to state 64
    STRING_LITERAL  shift, and go to state 110
    CHAR_LITERAL    shift, and go to state 65

    Expression          go to state 111
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 75

   32 Statement: IDENTIFIER LBRACKET • Expression RBRACKET EQUAL Expression SEMICOLON
   33          | IDENTIFIER LBRACKET • Expression RBRACKET EQUAL STRING_LITERAL SEMICOLON

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 112
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 76

   23 Declaration: Procedure •
   39 Statement: Procedure •

    IF          reduce using rule 23 (Declaration)
    IF          [reduce using rule 39 (Statement)]
    WHILE       reduce using rule 23 (Declaration)
    WHILE       [reduce using rule 39 (Statement)]
    PROCEDURE   reduce using rule 23 (Declaration)
    PROCEDURE   [reduce using rule 39 (Statement)]
    IDENTIFIER  reduce using rule 23 (Declaration)
    IDENTIFIER  [reduce using rule 39 (Statement)]
    LBRACE      reduce using rule 23 (Declaration)
    LBRACE      [reduce using rule 39 (Statement)]
    RBRACE      reduce using rule 23 (Declaration)
    RBRACE      [reduce using rule 39 (Statement)]
    $default    reduce using rule 23 (Declaration)


State 77

   18 Block: LBRACE OptionalDeclarations • OptionalStatements RBRACE

    IF          shift, and go to state 40
    WHILE       shift, and go to state 41
    PROCEDURE   shift, and go to state 1
    IDENTIFIER  shift, and go to state 42
    LBRACE      shift, and go to state 43

    $default  reduce using rule 14 (OptionalStatements)

    Procedure           go to state 44
    OptionalStatements  go to state 113
    Block               go to state 46
    Statements          go to state 47
    Statement           go to state 48


State 78

   37 Statement: LBRACE Statements • RBRACE

    RBRACE  shift, and go to state 114


State 79

   38 Statement: Block OptionalStatements •

    $default  reduce using rule 38 (Statement)


State 80

   29 Statements: Statement Statements •

    $default  reduce using rule 29 (Statements)


State 81

   24 SingleVarDeclaration: IDENTIFIER COLON STRING • LBRACKET INT_LITERAL RBRACKET

    LBRACKET  shift, and go to state 115


State 82

   25 SingleVarDeclaration: IDENTIFIER COLON Type •

    $default  reduce using rule 25 (SingleVarDeclaration)


State 83

   27 MultiVarDeclaration: IDList COLON STRING • LBRACKET INT_LITERAL RBRACKET

    LBRACKET  shift, and go to state 116


State 84

   26 MultiVarDeclaration: IDList COLON Type •

    $default  reduce using rule 26 (MultiVarDeclaration)


State 85

   56 UnaryExpr: MINUS UnaryExpr •

    $default  reduce using rule 56 (UnaryExpr)


State 86

   55 UnaryExpr: NOT UnaryExpr •

    $default  reduce using rule 55 (UnaryExpr)


State 87

   63 Variable: IDENTIFIER •
   64         | IDENTIFIER • LBRACKET Expression RBRACKET

    LBRACKET  shift, and go to state 117

    $default  reduce using rule 63 (Variable)


State 88

   57 UnaryExpr: AMP Variable •

    $default  reduce using rule 57 (UnaryExpr)


State 89

   58 UnaryExpr: DEREFERENCE IDENTIFIER •
   60          | DEREFERENCE IDENTIFIER • LBRACKET INT_LITERAL RBRACKET
   65 PrimaryExpr: IDENTIFIER •
   68            | IDENTIFIER • LPAREN ArgumentList RPAREN
   69            | IDENTIFIER • LBRACKET Expression RBRACKET

    LPAREN    shift, and go to state 91
    LBRACKET  shift, and go to state 118

    AND        reduce using rule 58 (UnaryExpr)
    AND        [reduce using rule 65 (PrimaryExpr)]
    DIV        reduce using rule 58 (UnaryExpr)
    DIV        [reduce using rule 65 (PrimaryExpr)]
    EQUALS     reduce using rule 58 (UnaryExpr)
    EQUALS     [reduce using rule 65 (PrimaryExpr)]
    GT         reduce using rule 58 (UnaryExpr)
    GT         [reduce using rule 65 (PrimaryExpr)]
    GTE        reduce using rule 58 (UnaryExpr)
    GTE        [reduce using rule 65 (PrimaryExpr)]
    LT         reduce using rule 58 (UnaryExpr)
    LT         [reduce using rule 65 (PrimaryExpr)]
    LTE        reduce using rule 58 (UnaryExpr)
    LTE        [reduce using rule 65 (PrimaryExpr)]
    MINUS      reduce using rule 58 (UnaryExpr)
    MINUS      [reduce using rule 65 (PrimaryExpr)]
    NOTEQUAL   reduce using rule 58 (UnaryExpr)
    NOTEQUAL   [reduce using rule 65 (PrimaryExpr)]
    OR         reduce using rule 58 (UnaryExpr)
    OR         [reduce using rule 65 (PrimaryExpr)]
    PLUS       reduce using rule 58 (UnaryExpr)
    PLUS       [reduce using rule 65 (PrimaryExpr)]
    MUL        reduce using rule 58 (UnaryExpr)
    MUL        [reduce using rule 65 (PrimaryExpr)]
    COMMA      reduce using rule 58 (UnaryExpr)
    COMMA      [reduce using rule 65 (PrimaryExpr)]
    SEMICOLON  reduce using rule 58 (UnaryExpr)
    SEMICOLON  [reduce using rule 65 (PrimaryExpr)]
    RPAREN     reduce using rule 58 (UnaryExpr)
    RPAREN     [reduce using rule 65 (PrimaryExpr)]
    BAR        reduce using rule 58 (UnaryExpr)
    BAR        [reduce using rule 65 (PrimaryExpr)]
    RBRACKET   reduce using rule 58 (UnaryExpr)
    RBRACKET   [reduce using rule 65 (PrimaryExpr)]
    $default   reduce using rule 58 (UnaryExpr)


State 90

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression
   59 UnaryExpr: DEREFERENCE Expression •

    $default  reduce using rule 59 (UnaryExpr)


State 91

   68 PrimaryExpr: IDENTIFIER LPAREN • ArgumentList RPAREN

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    $default  reduce using rule 74 (ArgumentList)

    Expression          go to state 119
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70
    ArgumentList        go to state 120


State 92

   69 PrimaryExpr: IDENTIFIER LBRACKET • Expression RBRACKET

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 121
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 93

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression
   67 PrimaryExpr: LPAREN Expression • RPAREN

    AND       shift, and go to state 95
    EQUALS    shift, and go to state 96
    GT        shift, and go to state 97
    GTE       shift, and go to state 98
    LT        shift, and go to state 99
    LTE       shift, and go to state 100
    NOTEQUAL  shift, and go to state 101
    OR        shift, and go to state 102
    RPAREN    shift, and go to state 122


State 94

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression
   61 UnaryExpr: BAR Expression • BAR

    AND       shift, and go to state 95
    EQUALS    shift, and go to state 96
    GT        shift, and go to state 97
    GTE       shift, and go to state 98
    LT        shift, and go to state 99
    LTE       shift, and go to state 100
    NOTEQUAL  shift, and go to state 101
    OR        shift, and go to state 102
    BAR       shift, and go to state 123


State 95

   41 Expression: Expression AND • Expression

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 124
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 96

   42 Expression: Expression EQUALS • Expression

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 125
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 97

   46 Expression: Expression GT • Expression

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 126
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 98

   47 Expression: Expression GTE • Expression

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 127
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 99

   44 Expression: Expression LT • Expression

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 128
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 100

   45 Expression: Expression LTE • Expression

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 129
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 101

   43 Expression: Expression NOTEQUAL • Expression

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 130
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 102

   40 Expression: Expression OR • Expression

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 131
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 103

   17 OptionalReturn: RETURN Expression SEMICOLON •

    $default  reduce using rule 17 (OptionalReturn)


State 104

   50 AdditiveExpr: AdditiveExpr MINUS • MultiplicativeExpr

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    MultiplicativeExpr  go to state 132
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 105

   49 AdditiveExpr: AdditiveExpr PLUS • MultiplicativeExpr

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    MultiplicativeExpr  go to state 133
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 106

   53 MultiplicativeExpr: MultiplicativeExpr DIV • UnaryExpr

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    UnaryExpr    go to state 134
    PrimaryExpr  go to state 70


State 107

   52 MultiplicativeExpr: MultiplicativeExpr MUL • UnaryExpr

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    UnaryExpr    go to state 135
    PrimaryExpr  go to state 70


State 108

   34 Statement: IF LPAREN Expression • RPAREN Block
   35          | IF LPAREN Expression • RPAREN Block ELSE Block
   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    AND       shift, and go to state 95
    EQUALS    shift, and go to state 96
    GT        shift, and go to state 97
    GTE       shift, and go to state 98
    LT        shift, and go to state 99
    LTE       shift, and go to state 100
    NOTEQUAL  shift, and go to state 101
    OR        shift, and go to state 102
    RPAREN    shift, and go to state 136


State 109

   36 Statement: WHILE LPAREN Expression • RPAREN Block
   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    AND       shift, and go to state 95
    EQUALS    shift, and go to state 96
    GT        shift, and go to state 97
    GTE       shift, and go to state 98
    LT        shift, and go to state 99
    LTE       shift, and go to state 100
    NOTEQUAL  shift, and go to state 101
    OR        shift, and go to state 102
    RPAREN    shift, and go to state 137


State 110

   31 Statement: IDENTIFIER EQUAL STRING_LITERAL • SEMICOLON

    SEMICOLON  shift, and go to state 138


State 111

   30 Statement: IDENTIFIER EQUAL Expression • SEMICOLON
   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    AND        shift, and go to state 95
    EQUALS     shift, and go to state 96
    GT         shift, and go to state 97
    GTE        shift, and go to state 98
    LT         shift, and go to state 99
    LTE        shift, and go to state 100
    NOTEQUAL   shift, and go to state 101
    OR         shift, and go to state 102
    SEMICOLON  shift, and go to state 139


State 112

   32 Statement: IDENTIFIER LBRACKET Expression • RBRACKET EQUAL Expression SEMICOLON
   33          | IDENTIFIER LBRACKET Expression • RBRACKET EQUAL STRING_LITERAL SEMICOLON
   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    AND       shift, and go to state 95
    EQUALS    shift, and go to state 96
    GT        shift, and go to state 97
    GTE       shift, and go to state 98
    LT        shift, and go to state 99
    LTE       shift, and go to state 100
    NOTEQUAL  shift, and go to state 101
    OR        shift, and go to state 102
    RBRACKET  shift, and go to state 140


State 113

   18 Block: LBRACE OptionalDeclarations OptionalStatements • RBRACE

    RBRACE  shift, and go to state 141


State 114

   37 Statement: LBRACE Statements RBRACE •

    $default  reduce using rule 37 (Statement)


State 115

   24 SingleVarDeclaration: IDENTIFIER COLON STRING LBRACKET • INT_LITERAL RBRACKET

    INT_LITERAL  shift, and go to state 142


State 116

   27 MultiVarDeclaration: IDList COLON STRING LBRACKET • INT_LITERAL RBRACKET

    INT_LITERAL  shift, and go to state 143


State 117

   64 Variable: IDENTIFIER LBRACKET • Expression RBRACKET

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 144
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 118

   60 UnaryExpr: DEREFERENCE IDENTIFIER LBRACKET • INT_LITERAL RBRACKET
   69 PrimaryExpr: IDENTIFIER LBRACKET • Expression RBRACKET

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 145
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    Expression          go to state 121
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 119

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression
   75 ArgumentList: Expression •
   76             | Expression • COMMA ArgumentList

    AND       shift, and go to state 95
    EQUALS    shift, and go to state 96
    GT        shift, and go to state 97
    GTE       shift, and go to state 98
    LT        shift, and go to state 99
    LTE       shift, and go to state 100
    NOTEQUAL  shift, and go to state 101
    OR        shift, and go to state 102
    COMMA     shift, and go to state 146

    $default  reduce using rule 75 (ArgumentList)


State 120

   68 PrimaryExpr: IDENTIFIER LPAREN ArgumentList • RPAREN

    RPAREN  shift, and go to state 147


State 121

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression
   69 PrimaryExpr: IDENTIFIER LBRACKET Expression • RBRACKET

    AND       shift, and go to state 95
    EQUALS    shift, and go to state 96
    GT        shift, and go to state 97
    GTE       shift, and go to state 98
    LT        shift, and go to state 99
    LTE       shift, and go to state 100
    NOTEQUAL  shift, and go to state 101
    OR        shift, and go to state 102
    RBRACKET  shift, and go to state 148


State 122

   67 PrimaryExpr: LPAREN Expression RPAREN •

    $default  reduce using rule 67 (PrimaryExpr)


State 123

   61 UnaryExpr: BAR Expression BAR •

    $default  reduce using rule 61 (UnaryExpr)


State 124

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   41           | Expression AND Expression •
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    EQUALS    shift, and go to state 96
    GT        shift, and go to state 97
    GTE       shift, and go to state 98
    LT        shift, and go to state 99
    LTE       shift, and go to state 100
    NOTEQUAL  shift, and go to state 101

    $default  reduce using rule 41 (Expression)


State 125

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   42           | Expression EQUALS Expression •
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    GT   shift, and go to state 97
    GTE  shift, and go to state 98
    LT   shift, and go to state 99
    LTE  shift, and go to state 100

    $default  reduce using rule 42 (Expression)


State 126

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   46           | Expression GT Expression •
   47           | Expression • GTE Expression

    $default  reduce using rule 46 (Expression)


State 127

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression
   47           | Expression GTE Expression •

    $default  reduce using rule 47 (Expression)


State 128

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   44           | Expression LT Expression •
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    $default  reduce using rule 44 (Expression)


State 129

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   45           | Expression LTE Expression •
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    $default  reduce using rule 45 (Expression)


State 130

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   43           | Expression NOTEQUAL Expression •
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    GT   shift, and go to state 97
    GTE  shift, and go to state 98
    LT   shift, and go to state 99
    LTE  shift, and go to state 100

    $default  reduce using rule 43 (Expression)


State 131

   40 Expression: Expression • OR Expression
   40           | Expression OR Expression •
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    AND       shift, and go to state 95
    EQUALS    shift, and go to state 96
    GT        shift, and go to state 97
    GTE       shift, and go to state 98
    LT        shift, and go to state 99
    LTE       shift, and go to state 100
    NOTEQUAL  shift, and go to state 101

    $default  reduce using rule 40 (Expression)


State 132

   50 AdditiveExpr: AdditiveExpr MINUS MultiplicativeExpr •
   52 MultiplicativeExpr: MultiplicativeExpr • MUL UnaryExpr
   53                   | MultiplicativeExpr • DIV UnaryExpr

    DIV  shift, and go to state 106
    MUL  shift, and go to state 107

    $default  reduce using rule 50 (AdditiveExpr)


State 133

   49 AdditiveExpr: AdditiveExpr PLUS MultiplicativeExpr •
   52 MultiplicativeExpr: MultiplicativeExpr • MUL UnaryExpr
   53                   | MultiplicativeExpr • DIV UnaryExpr

    DIV  shift, and go to state 106
    MUL  shift, and go to state 107

    $default  reduce using rule 49 (AdditiveExpr)


State 134

   53 MultiplicativeExpr: MultiplicativeExpr DIV UnaryExpr •

    $default  reduce using rule 53 (MultiplicativeExpr)


State 135

   52 MultiplicativeExpr: MultiplicativeExpr MUL UnaryExpr •

    $default  reduce using rule 52 (MultiplicativeExpr)


State 136

   34 Statement: IF LPAREN Expression RPAREN • Block
   35          | IF LPAREN Expression RPAREN • Block ELSE Block

    LBRACE  shift, and go to state 149

    Block  go to state 150


State 137

   36 Statement: WHILE LPAREN Expression RPAREN • Block

    LBRACE  shift, and go to state 149

    Block  go to state 151


State 138

   31 Statement: IDENTIFIER EQUAL STRING_LITERAL SEMICOLON •

    $default  reduce using rule 31 (Statement)


State 139

   30 Statement: IDENTIFIER EQUAL Expression SEMICOLON •

    $default  reduce using rule 30 (Statement)


State 140

   32 Statement: IDENTIFIER LBRACKET Expression RBRACKET • EQUAL Expression SEMICOLON
   33          | IDENTIFIER LBRACKET Expression RBRACKET • EQUAL STRING_LITERAL SEMICOLON

    EQUAL  shift, and go to state 152


State 141

   18 Block: LBRACE OptionalDeclarations OptionalStatements RBRACE •

    $default  reduce using rule 18 (Block)


State 142

   24 SingleVarDeclaration: IDENTIFIER COLON STRING LBRACKET INT_LITERAL • RBRACKET

    RBRACKET  shift, and go to state 153


State 143

   27 MultiVarDeclaration: IDList COLON STRING LBRACKET INT_LITERAL • RBRACKET

    RBRACKET  shift, and go to state 154


State 144

   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression
   64 Variable: IDENTIFIER LBRACKET Expression • RBRACKET

    AND       shift, and go to state 95
    EQUALS    shift, and go to state 96
    GT        shift, and go to state 97
    GTE       shift, and go to state 98
    LT        shift, and go to state 99
    LTE       shift, and go to state 100
    NOTEQUAL  shift, and go to state 101
    OR        shift, and go to state 102
    RBRACKET  shift, and go to state 155


State 145

   60 UnaryExpr: DEREFERENCE IDENTIFIER LBRACKET INT_LITERAL • RBRACKET
   66 PrimaryExpr: INT_LITERAL •

    RBRACKET  shift, and go to state 156

    RBRACKET  [reduce using rule 66 (PrimaryExpr)]
    $default  reduce using rule 66 (PrimaryExpr)


State 146

   76 ArgumentList: Expression COMMA • ArgumentList

    NULLTOKEN     shift, and go to state 54
    MINUS         shift, and go to state 55
    NOT           shift, and go to state 56
    AMP           shift, and go to state 57
    DEREFERENCE   shift, and go to state 58
    TRUE          shift, and go to state 59
    FALSE         shift, and go to state 60
    INT_LITERAL   shift, and go to state 61
    IDENTIFIER    shift, and go to state 62
    LPAREN        shift, and go to state 63
    BAR           shift, and go to state 64
    CHAR_LITERAL  shift, and go to state 65

    $default  reduce using rule 74 (ArgumentList)

    Expression          go to state 119
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70
    ArgumentList        go to state 157


State 147

   68 PrimaryExpr: IDENTIFIER LPAREN ArgumentList RPAREN •

    $default  reduce using rule 68 (PrimaryExpr)


State 148

   69 PrimaryExpr: IDENTIFIER LBRACKET Expression RBRACKET •

    $default  reduce using rule 69 (PrimaryExpr)


State 149

   18 Block: LBRACE • OptionalDeclarations OptionalStatements RBRACE

    VAR        shift, and go to state 28
    PROCEDURE  shift, and go to state 1

    PROCEDURE  [reduce using rule 12 (OptionalDeclarations)]
    $default   reduce using rule 12 (OptionalDeclarations)

    Procedure             go to state 29
    OptionalDeclarations  go to state 77
    Declarations          go to state 32
    Declaration           go to state 33


State 150

   34 Statement: IF LPAREN Expression RPAREN Block •
   35          | IF LPAREN Expression RPAREN Block • ELSE Block

    ELSE  shift, and go to state 158

    $default  reduce using rule 34 (Statement)


State 151

   36 Statement: WHILE LPAREN Expression RPAREN Block •

    $default  reduce using rule 36 (Statement)


State 152

   32 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL • Expression SEMICOLON
   33          | IDENTIFIER LBRACKET Expression RBRACKET EQUAL • STRING_LITERAL SEMICOLON

    NULLTOKEN       shift, and go to state 54
    MINUS           shift, and go to state 55
    NOT             shift, and go to state 56
    AMP             shift, and go to state 57
    DEREFERENCE     shift, and go to state 58
    TRUE            shift, and go to state 59
    FALSE           shift, and go to state 60
    INT_LITERAL     shift, and go to state 61
    IDENTIFIER      shift, and go to state 62
    LPAREN          shift, and go to state 63
    BAR             shift, and go to state 64
    STRING_LITERAL  shift, and go to state 159
    CHAR_LITERAL    shift, and go to state 65

    Expression          go to state 160
    AdditiveExpr        go to state 67
    MultiplicativeExpr  go to state 68
    UnaryExpr           go to state 69
    PrimaryExpr         go to state 70


State 153

   24 SingleVarDeclaration: IDENTIFIER COLON STRING LBRACKET INT_LITERAL RBRACKET •

    $default  reduce using rule 24 (SingleVarDeclaration)


State 154

   27 MultiVarDeclaration: IDList COLON STRING LBRACKET INT_LITERAL RBRACKET •

    $default  reduce using rule 27 (MultiVarDeclaration)


State 155

   64 Variable: IDENTIFIER LBRACKET Expression RBRACKET •

    $default  reduce using rule 64 (Variable)


State 156

   60 UnaryExpr: DEREFERENCE IDENTIFIER LBRACKET INT_LITERAL RBRACKET •

    $default  reduce using rule 60 (UnaryExpr)


State 157

   76 ArgumentList: Expression COMMA ArgumentList •

    $default  reduce using rule 76 (ArgumentList)


State 158

   35 Statement: IF LPAREN Expression RPAREN Block ELSE • Block

    LBRACE  shift, and go to state 149

    Block  go to state 161


State 159

   33 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL STRING_LITERAL • SEMICOLON

    SEMICOLON  shift, and go to state 162


State 160

   32 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL Expression • SEMICOLON
   40 Expression: Expression • OR Expression
   41           | Expression • AND Expression
   42           | Expression • EQUALS Expression
   43           | Expression • NOTEQUAL Expression
   44           | Expression • LT Expression
   45           | Expression • LTE Expression
   46           | Expression • GT Expression
   47           | Expression • GTE Expression

    AND        shift, and go to state 95
    EQUALS     shift, and go to state 96
    GT         shift, and go to state 97
    GTE        shift, and go to state 98
    LT         shift, and go to state 99
    LTE        shift, and go to state 100
    NOTEQUAL   shift, and go to state 101
    OR         shift, and go to state 102
    SEMICOLON  shift, and go to state 163


State 161

   35 Statement: IF LPAREN Expression RPAREN Block ELSE Block •

    $default  reduce using rule 35 (Statement)


State 162

   33 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL STRING_LITERAL SEMICOLON •

    $default  reduce using rule 33 (Statement)


State 163

   32 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL Expression SEMICOLON •

    $default  reduce using rule 32 (Statement)
