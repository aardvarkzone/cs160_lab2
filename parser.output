State 28 conflicts: 5 shift/reduce, 2 reduce/reduce
State 34 conflicts: 7 reduce/reduce
State 36 conflicts: 2 reduce/reduce
State 37 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ProcedureList

    2 ProcedureList: Procedure
    3              | Procedure ProcedureList

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParameterList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    5 ParameterList: ε
    6              | Param
    7              | Param COMMA ParameterList

    8 Param: IDList COLON Type

    9 IDList: IDENTIFIER
   10       | IDENTIFIER COMMA IDList

   11 Body: Declarations
   12     | Statements
   13     | Declarations Statements

   14 OptionalReturn: ε
   15               | ReturnStatement

   16 ReturnStatement: RETURN Expression SEMICOLON

   17 Block: LBRACE Declarations Statements RBRACE

   18 Declarations: ε
   19             | Declaration Declarations

   20 Declaration: VAR InitList SEMICOLON
   21            | VAR IDList COLON ArrayType SEMICOLON
   22            | Procedure

   23 OptionalInit: ε
   24             | EQUAL InitValues

   25 InitValues: Expression
   26           | Expression COMMA InitValues

   27 InitList: Init
   28         | Init COMMA InitList

   29 Init: IDList COLON Type OptionalInit

   30 ArrayType: Type LBRACKET INT_LITERAL RBRACKET
   31          | ArrayType LBRACKET INT_LITERAL RBRACKET
   32          | Type LBRACKET RBRACKET

   33 Statements: ε
   34           | Statement Statements

   35 Statement: IDENTIFIER EQUAL Expression SEMICOLON
   36          | IDENTIFIER LBRACKET Expression RBRACKET EQUAL Expression SEMICOLON
   37          | IF LPAREN Expression RPAREN Block
   38          | IF LPAREN Expression RPAREN Block ELSE Block
   39          | WHILE LPAREN Expression RPAREN Block
   40          | LBRACE Statements RBRACE
   41          | Procedure

   42 Expression: Expression OR Expression
   43           | Expression AND Expression
   44           | Expression EQUALS Expression
   45           | Expression NOTEQUAL Expression
   46           | Expression LT Expression
   47           | Expression LTE Expression
   48           | Expression GT Expression
   49           | Expression GTE Expression
   50           | AdditiveExpr

   51 AdditiveExpr: AdditiveExpr PLUS MultiplicativeExpr
   52             | AdditiveExpr MINUS MultiplicativeExpr
   53             | MultiplicativeExpr

   54 MultiplicativeExpr: MultiplicativeExpr MUL BitwiseExpr
   55                   | MultiplicativeExpr DIV BitwiseExpr
   56                   | BitwiseExpr

   57 BitwiseExpr: BitwiseExpr XOR UnaryExpr
   58            | UnaryExpr

   59 UnaryExpr: NOT UnaryExpr
   60          | MINUS UnaryExpr
   61          | AMP UnaryExpr
   62          | AbsExpr
   63          | PrimaryExpr

   64 AbsExpr: BAR Expression BAR

   65 PrimaryExpr: IDENTIFIER
   66            | INT_LITERAL
   67            | LPAREN Expression RPAREN
   68            | IDENTIFIER LPAREN ArgumentList RPAREN
   69            | IDENTIFIER LBRACKET Expression RBRACKET
   70            | STRING_LITERAL
   71            | CHAR_LITERAL
   72            | TRUE
   73            | FALSE
   74            | NULLTOKEN

   75 ArgumentList: ε
   76             | NonEmptyArgumentList

   77 NonEmptyArgumentList: Expression
   78                     | Expression COMMA NonEmptyArgumentList

   79 Type: BOOLEAN
   80     | CHAR
   81     | INTEGER
   82     | STRING
   83     | INTPTR
   84     | CHARPTR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BOOLEAN (258) 79
    CHAR (259) 80
    INTEGER (260) 81
    STRING (261) 82
    INTPTR (262) 83
    CHARPTR (263) 84
    IF (264) 37 38
    ELSE (265) 38
    WHILE (266) 39
    VAR (267) 20 21
    PROCEDURE (268) 4
    RETURN (269) 4 16
    NULLTOKEN (270) 74
    AND (271) 43
    DIV (272) 55
    EQUAL (273) 24 35 36
    EQUALS (274) 44
    GT (275) 48
    GTE (276) 49
    LT (277) 46
    LTE (278) 47
    MINUS (279) 52 60
    NOT (280) 59
    NOTEQUAL (281) 45
    OR (282) 42
    PLUS (283) 51
    MUL (284) 54
    AMP (285) 61
    XOR (286) 57
    TRUE (287) 72
    FALSE (288) 73
    INT_LITERAL (289) 30 31 66
    IDENTIFIER (290) 4 9 10 35 36 65 68 69
    COMMA (291) 7 10 26 28 78
    COLON (292) 8 21 29
    UMINUS (293)
    LBRACE (294) 4 17 40
    RBRACE (295) 4 17 40
    SEMICOLON (296) 16 20 21 35 36
    LPAREN (297) 4 37 38 39 67 68
    RPAREN (298) 4 37 38 39 67 68
    BAR (299) 64
    LBRACKET (300) 30 31 32 36 69
    RBRACKET (301) 30 31 32 36 69
    STRING_LITERAL (302) 70
    CHAR_LITERAL (303) 71


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    Program (50)
        on left: 1
        on right: 0
    ProcedureList (51)
        on left: 2 3
        on right: 1 3
    Procedure (52)
        on left: 4
        on right: 2 3 22 41
    ParameterList (53)
        on left: 5 6 7
        on right: 4 7
    Param (54)
        on left: 8
        on right: 6 7
    IDList (55)
        on left: 9 10
        on right: 8 10 21 29
    Body (56)
        on left: 11 12 13
        on right: 4
    OptionalReturn (57)
        on left: 14 15
        on right: 4
    ReturnStatement (58)
        on left: 16
        on right: 15
    Block (59)
        on left: 17
        on right: 37 38 39
    Declarations (60)
        on left: 18 19
        on right: 11 13 17 19
    Declaration (61)
        on left: 20 21 22
        on right: 19
    OptionalInit (62)
        on left: 23 24
        on right: 29
    InitValues (63)
        on left: 25 26
        on right: 24 26
    InitList (64)
        on left: 27 28
        on right: 20 28
    Init (65)
        on left: 29
        on right: 27 28
    ArrayType (66)
        on left: 30 31 32
        on right: 21 31
    Statements (67)
        on left: 33 34
        on right: 12 13 17 34 40
    Statement (68)
        on left: 35 36 37 38 39 40 41
        on right: 34
    Expression (69)
        on left: 42 43 44 45 46 47 48 49 50
        on right: 16 25 26 35 36 37 38 39 42 43 44 45 46 47 48 49 64 67 69 77 78
    AdditiveExpr (70)
        on left: 51 52 53
        on right: 50 51 52
    MultiplicativeExpr (71)
        on left: 54 55 56
        on right: 51 52 53 54 55
    BitwiseExpr (72)
        on left: 57 58
        on right: 54 55 56 57
    UnaryExpr (73)
        on left: 59 60 61 62 63
        on right: 57 58 59 60 61
    AbsExpr (74)
        on left: 64
        on right: 62
    PrimaryExpr (75)
        on left: 65 66 67 68 69 70 71 72 73 74
        on right: 63
    ArgumentList (76)
        on left: 75 76
        on right: 68
    NonEmptyArgumentList (77)
        on left: 77 78
        on right: 76 78
    Type (78)
        on left: 79 80 81 82 83 84
        on right: 4 8 29 30 32


State 0

    0 $accept: • Program $end

    PROCEDURE  shift, and go to state 1

    Program        go to state 2
    ProcedureList  go to state 3
    Procedure      go to state 4


State 1

    4 Procedure: PROCEDURE • IDENTIFIER LPAREN ParameterList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 6


State 3

    1 Program: ProcedureList •

    $default  reduce using rule 1 (Program)


State 4

    2 ProcedureList: Procedure •
    3              | Procedure • ProcedureList

    PROCEDURE  shift, and go to state 1

    $default  reduce using rule 2 (ProcedureList)

    ProcedureList  go to state 7
    Procedure      go to state 4


State 5

    4 Procedure: PROCEDURE IDENTIFIER • LPAREN ParameterList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    LPAREN  shift, and go to state 8


State 6

    0 $accept: Program $end •

    $default  accept


State 7

    3 ProcedureList: Procedure ProcedureList •

    $default  reduce using rule 3 (ProcedureList)


State 8

    4 Procedure: PROCEDURE IDENTIFIER LPAREN • ParameterList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 5 (ParameterList)

    ParameterList  go to state 10
    Param          go to state 11
    IDList         go to state 12


State 9

    9 IDList: IDENTIFIER •
   10       | IDENTIFIER • COMMA IDList

    COMMA  shift, and go to state 13

    $default  reduce using rule 9 (IDList)


State 10

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParameterList • RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    RPAREN  shift, and go to state 14


State 11

    6 ParameterList: Param •
    7              | Param • COMMA ParameterList

    COMMA  shift, and go to state 15

    $default  reduce using rule 6 (ParameterList)


State 12

    8 Param: IDList • COLON Type

    COLON  shift, and go to state 16


State 13

   10 IDList: IDENTIFIER COMMA • IDList

    IDENTIFIER  shift, and go to state 9

    IDList  go to state 17


State 14

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParameterList RPAREN • RETURN Type LBRACE Body OptionalReturn RBRACE

    RETURN  shift, and go to state 18


State 15

    7 ParameterList: Param COMMA • ParameterList

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 5 (ParameterList)

    ParameterList  go to state 19
    Param          go to state 11
    IDList         go to state 12


State 16

    8 Param: IDList COLON • Type

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    STRING   shift, and go to state 23
    INTPTR   shift, and go to state 24
    CHARPTR  shift, and go to state 25

    Type  go to state 26


State 17

   10 IDList: IDENTIFIER COMMA IDList •

    $default  reduce using rule 10 (IDList)


State 18

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParameterList RPAREN RETURN • Type LBRACE Body OptionalReturn RBRACE

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    STRING   shift, and go to state 23
    INTPTR   shift, and go to state 24
    CHARPTR  shift, and go to state 25

    Type  go to state 27


State 19

    7 ParameterList: Param COMMA ParameterList •

    $default  reduce using rule 7 (ParameterList)


State 20

   79 Type: BOOLEAN •

    $default  reduce using rule 79 (Type)


State 21

   80 Type: CHAR •

    $default  reduce using rule 80 (Type)


State 22

   81 Type: INTEGER •

    $default  reduce using rule 81 (Type)


State 23

   82 Type: STRING •

    $default  reduce using rule 82 (Type)


State 24

   83 Type: INTPTR •

    $default  reduce using rule 83 (Type)


State 25

   84 Type: CHARPTR •

    $default  reduce using rule 84 (Type)


State 26

    8 Param: IDList COLON Type •

    $default  reduce using rule 8 (Param)


State 27

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParameterList RPAREN RETURN Type • LBRACE Body OptionalReturn RBRACE

    LBRACE  shift, and go to state 28


State 28

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParameterList RPAREN RETURN Type LBRACE • Body OptionalReturn RBRACE

    IF          shift, and go to state 29
    WHILE       shift, and go to state 30
    VAR         shift, and go to state 31
    PROCEDURE   shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    LBRACE      shift, and go to state 33

    IF          [reduce using rule 18 (Declarations)]
    WHILE       [reduce using rule 18 (Declarations)]
    PROCEDURE   [reduce using rule 18 (Declarations)]
    RETURN      reduce using rule 18 (Declarations)
    RETURN      [reduce using rule 33 (Statements)]
    IDENTIFIER  [reduce using rule 18 (Declarations)]
    LBRACE      [reduce using rule 18 (Declarations)]
    RBRACE      reduce using rule 18 (Declarations)
    RBRACE      [reduce using rule 33 (Statements)]
    $default    reduce using rule 18 (Declarations)

    Procedure     go to state 34
    Body          go to state 35
    Declarations  go to state 36
    Declaration   go to state 37
    Statements    go to state 38
    Statement     go to state 39


State 29

   37 Statement: IF • LPAREN Expression RPAREN Block
   38          | IF • LPAREN Expression RPAREN Block ELSE Block

    LPAREN  shift, and go to state 40


State 30

   39 Statement: WHILE • LPAREN Expression RPAREN Block

    LPAREN  shift, and go to state 41


State 31

   20 Declaration: VAR • InitList SEMICOLON
   21            | VAR • IDList COLON ArrayType SEMICOLON

    IDENTIFIER  shift, and go to state 9

    IDList    go to state 42
    InitList  go to state 43
    Init      go to state 44


State 32

   35 Statement: IDENTIFIER • EQUAL Expression SEMICOLON
   36          | IDENTIFIER • LBRACKET Expression RBRACKET EQUAL Expression SEMICOLON

    EQUAL     shift, and go to state 45
    LBRACKET  shift, and go to state 46


State 33

   40 Statement: LBRACE • Statements RBRACE

    IF          shift, and go to state 29
    WHILE       shift, and go to state 30
    PROCEDURE   shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    LBRACE      shift, and go to state 33

    $default  reduce using rule 33 (Statements)

    Procedure   go to state 47
    Statements  go to state 48
    Statement   go to state 39


State 34

   22 Declaration: Procedure •
   41 Statement: Procedure •

    IF          reduce using rule 22 (Declaration)
    IF          [reduce using rule 41 (Statement)]
    WHILE       reduce using rule 22 (Declaration)
    WHILE       [reduce using rule 41 (Statement)]
    PROCEDURE   reduce using rule 22 (Declaration)
    PROCEDURE   [reduce using rule 41 (Statement)]
    RETURN      reduce using rule 22 (Declaration)
    RETURN      [reduce using rule 41 (Statement)]
    IDENTIFIER  reduce using rule 22 (Declaration)
    IDENTIFIER  [reduce using rule 41 (Statement)]
    LBRACE      reduce using rule 22 (Declaration)
    LBRACE      [reduce using rule 41 (Statement)]
    RBRACE      reduce using rule 22 (Declaration)
    RBRACE      [reduce using rule 41 (Statement)]
    $default    reduce using rule 22 (Declaration)


State 35

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParameterList RPAREN RETURN Type LBRACE Body • OptionalReturn RBRACE

    RETURN  shift, and go to state 49

    $default  reduce using rule 14 (OptionalReturn)

    OptionalReturn   go to state 50
    ReturnStatement  go to state 51


State 36

   11 Body: Declarations •
   13     | Declarations • Statements

    IF          shift, and go to state 29
    WHILE       shift, and go to state 30
    PROCEDURE   shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    LBRACE      shift, and go to state 33

    RETURN    reduce using rule 11 (Body)
    RETURN    [reduce using rule 33 (Statements)]
    RBRACE    reduce using rule 11 (Body)
    RBRACE    [reduce using rule 33 (Statements)]
    $default  reduce using rule 11 (Body)

    Procedure   go to state 47
    Statements  go to state 52
    Statement   go to state 39


State 37

   19 Declarations: Declaration • Declarations

    VAR        shift, and go to state 31
    PROCEDURE  shift, and go to state 1

    PROCEDURE  [reduce using rule 18 (Declarations)]
    $default   reduce using rule 18 (Declarations)

    Procedure     go to state 53
    Declarations  go to state 54
    Declaration   go to state 37


State 38

   12 Body: Statements •

    $default  reduce using rule 12 (Body)


State 39

   34 Statements: Statement • Statements

    IF          shift, and go to state 29
    WHILE       shift, and go to state 30
    PROCEDURE   shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    LBRACE      shift, and go to state 33

    $default  reduce using rule 33 (Statements)

    Procedure   go to state 47
    Statements  go to state 55
    Statement   go to state 39


State 40

   37 Statement: IF LPAREN • Expression RPAREN Block
   38          | IF LPAREN • Expression RPAREN Block ELSE Block

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 68
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 41

   39 Statement: WHILE LPAREN • Expression RPAREN Block

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 75
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 42

   21 Declaration: VAR IDList • COLON ArrayType SEMICOLON
   29 Init: IDList • COLON Type OptionalInit

    COLON  shift, and go to state 76


State 43

   20 Declaration: VAR InitList • SEMICOLON

    SEMICOLON  shift, and go to state 77


State 44

   27 InitList: Init •
   28         | Init • COMMA InitList

    COMMA  shift, and go to state 78

    $default  reduce using rule 27 (InitList)


State 45

   35 Statement: IDENTIFIER EQUAL • Expression SEMICOLON

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 79
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 46

   36 Statement: IDENTIFIER LBRACKET • Expression RBRACKET EQUAL Expression SEMICOLON

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 80
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 47

   41 Statement: Procedure •

    $default  reduce using rule 41 (Statement)


State 48

   40 Statement: LBRACE Statements • RBRACE

    RBRACE  shift, and go to state 81


State 49

   16 ReturnStatement: RETURN • Expression SEMICOLON

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 82
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 50

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParameterList RPAREN RETURN Type LBRACE Body OptionalReturn • RBRACE

    RBRACE  shift, and go to state 83


State 51

   15 OptionalReturn: ReturnStatement •

    $default  reduce using rule 15 (OptionalReturn)


State 52

   13 Body: Declarations Statements •

    $default  reduce using rule 13 (Body)


State 53

   22 Declaration: Procedure •

    $default  reduce using rule 22 (Declaration)


State 54

   19 Declarations: Declaration Declarations •

    $default  reduce using rule 19 (Declarations)


State 55

   34 Statements: Statement Statements •

    $default  reduce using rule 34 (Statements)


State 56

   74 PrimaryExpr: NULLTOKEN •

    $default  reduce using rule 74 (PrimaryExpr)


State 57

   60 UnaryExpr: MINUS • UnaryExpr

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    UnaryExpr    go to state 84
    AbsExpr      go to state 73
    PrimaryExpr  go to state 74


State 58

   59 UnaryExpr: NOT • UnaryExpr

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    UnaryExpr    go to state 85
    AbsExpr      go to state 73
    PrimaryExpr  go to state 74


State 59

   61 UnaryExpr: AMP • UnaryExpr

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    UnaryExpr    go to state 86
    AbsExpr      go to state 73
    PrimaryExpr  go to state 74


State 60

   72 PrimaryExpr: TRUE •

    $default  reduce using rule 72 (PrimaryExpr)


State 61

   73 PrimaryExpr: FALSE •

    $default  reduce using rule 73 (PrimaryExpr)


State 62

   66 PrimaryExpr: INT_LITERAL •

    $default  reduce using rule 66 (PrimaryExpr)


State 63

   65 PrimaryExpr: IDENTIFIER •
   68            | IDENTIFIER • LPAREN ArgumentList RPAREN
   69            | IDENTIFIER • LBRACKET Expression RBRACKET

    LPAREN    shift, and go to state 87
    LBRACKET  shift, and go to state 88

    $default  reduce using rule 65 (PrimaryExpr)


State 64

   67 PrimaryExpr: LPAREN • Expression RPAREN

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 89
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 65

   64 AbsExpr: BAR • Expression BAR

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 90
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 66

   70 PrimaryExpr: STRING_LITERAL •

    $default  reduce using rule 70 (PrimaryExpr)


State 67

   71 PrimaryExpr: CHAR_LITERAL •

    $default  reduce using rule 71 (PrimaryExpr)


State 68

   37 Statement: IF LPAREN Expression • RPAREN Block
   38          | IF LPAREN Expression • RPAREN Block ELSE Block
   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    AND       shift, and go to state 91
    EQUALS    shift, and go to state 92
    GT        shift, and go to state 93
    GTE       shift, and go to state 94
    LT        shift, and go to state 95
    LTE       shift, and go to state 96
    NOTEQUAL  shift, and go to state 97
    OR        shift, and go to state 98
    RPAREN    shift, and go to state 99


State 69

   50 Expression: AdditiveExpr •
   51 AdditiveExpr: AdditiveExpr • PLUS MultiplicativeExpr
   52             | AdditiveExpr • MINUS MultiplicativeExpr

    MINUS  shift, and go to state 100
    PLUS   shift, and go to state 101

    $default  reduce using rule 50 (Expression)


State 70

   53 AdditiveExpr: MultiplicativeExpr •
   54 MultiplicativeExpr: MultiplicativeExpr • MUL BitwiseExpr
   55                   | MultiplicativeExpr • DIV BitwiseExpr

    DIV  shift, and go to state 102
    MUL  shift, and go to state 103

    $default  reduce using rule 53 (AdditiveExpr)


State 71

   56 MultiplicativeExpr: BitwiseExpr •
   57 BitwiseExpr: BitwiseExpr • XOR UnaryExpr

    XOR  shift, and go to state 104

    $default  reduce using rule 56 (MultiplicativeExpr)


State 72

   58 BitwiseExpr: UnaryExpr •

    $default  reduce using rule 58 (BitwiseExpr)


State 73

   62 UnaryExpr: AbsExpr •

    $default  reduce using rule 62 (UnaryExpr)


State 74

   63 UnaryExpr: PrimaryExpr •

    $default  reduce using rule 63 (UnaryExpr)


State 75

   39 Statement: WHILE LPAREN Expression • RPAREN Block
   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    AND       shift, and go to state 91
    EQUALS    shift, and go to state 92
    GT        shift, and go to state 93
    GTE       shift, and go to state 94
    LT        shift, and go to state 95
    LTE       shift, and go to state 96
    NOTEQUAL  shift, and go to state 97
    OR        shift, and go to state 98
    RPAREN    shift, and go to state 105


State 76

   21 Declaration: VAR IDList COLON • ArrayType SEMICOLON
   29 Init: IDList COLON • Type OptionalInit

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    STRING   shift, and go to state 23
    INTPTR   shift, and go to state 24
    CHARPTR  shift, and go to state 25

    ArrayType  go to state 106
    Type       go to state 107


State 77

   20 Declaration: VAR InitList SEMICOLON •

    $default  reduce using rule 20 (Declaration)


State 78

   28 InitList: Init COMMA • InitList

    IDENTIFIER  shift, and go to state 9

    IDList    go to state 108
    InitList  go to state 109
    Init      go to state 44


State 79

   35 Statement: IDENTIFIER EQUAL Expression • SEMICOLON
   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    AND        shift, and go to state 91
    EQUALS     shift, and go to state 92
    GT         shift, and go to state 93
    GTE        shift, and go to state 94
    LT         shift, and go to state 95
    LTE        shift, and go to state 96
    NOTEQUAL   shift, and go to state 97
    OR         shift, and go to state 98
    SEMICOLON  shift, and go to state 110


State 80

   36 Statement: IDENTIFIER LBRACKET Expression • RBRACKET EQUAL Expression SEMICOLON
   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    AND       shift, and go to state 91
    EQUALS    shift, and go to state 92
    GT        shift, and go to state 93
    GTE       shift, and go to state 94
    LT        shift, and go to state 95
    LTE       shift, and go to state 96
    NOTEQUAL  shift, and go to state 97
    OR        shift, and go to state 98
    RBRACKET  shift, and go to state 111


State 81

   40 Statement: LBRACE Statements RBRACE •

    $default  reduce using rule 40 (Statement)


State 82

   16 ReturnStatement: RETURN Expression • SEMICOLON
   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    AND        shift, and go to state 91
    EQUALS     shift, and go to state 92
    GT         shift, and go to state 93
    GTE        shift, and go to state 94
    LT         shift, and go to state 95
    LTE        shift, and go to state 96
    NOTEQUAL   shift, and go to state 97
    OR         shift, and go to state 98
    SEMICOLON  shift, and go to state 112


State 83

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParameterList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE •

    $default  reduce using rule 4 (Procedure)


State 84

   60 UnaryExpr: MINUS UnaryExpr •

    $default  reduce using rule 60 (UnaryExpr)


State 85

   59 UnaryExpr: NOT UnaryExpr •

    $default  reduce using rule 59 (UnaryExpr)


State 86

   61 UnaryExpr: AMP UnaryExpr •

    $default  reduce using rule 61 (UnaryExpr)


State 87

   68 PrimaryExpr: IDENTIFIER LPAREN • ArgumentList RPAREN

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    $default  reduce using rule 75 (ArgumentList)

    Expression            go to state 113
    AdditiveExpr          go to state 69
    MultiplicativeExpr    go to state 70
    BitwiseExpr           go to state 71
    UnaryExpr             go to state 72
    AbsExpr               go to state 73
    PrimaryExpr           go to state 74
    ArgumentList          go to state 114
    NonEmptyArgumentList  go to state 115


State 88

   69 PrimaryExpr: IDENTIFIER LBRACKET • Expression RBRACKET

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 116
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 89

   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression
   67 PrimaryExpr: LPAREN Expression • RPAREN

    AND       shift, and go to state 91
    EQUALS    shift, and go to state 92
    GT        shift, and go to state 93
    GTE       shift, and go to state 94
    LT        shift, and go to state 95
    LTE       shift, and go to state 96
    NOTEQUAL  shift, and go to state 97
    OR        shift, and go to state 98
    RPAREN    shift, and go to state 117


State 90

   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression
   64 AbsExpr: BAR Expression • BAR

    AND       shift, and go to state 91
    EQUALS    shift, and go to state 92
    GT        shift, and go to state 93
    GTE       shift, and go to state 94
    LT        shift, and go to state 95
    LTE       shift, and go to state 96
    NOTEQUAL  shift, and go to state 97
    OR        shift, and go to state 98
    BAR       shift, and go to state 118


State 91

   43 Expression: Expression AND • Expression

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 119
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 92

   44 Expression: Expression EQUALS • Expression

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 120
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 93

   48 Expression: Expression GT • Expression

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 121
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 94

   49 Expression: Expression GTE • Expression

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 122
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 95

   46 Expression: Expression LT • Expression

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 123
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 96

   47 Expression: Expression LTE • Expression

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 124
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 97

   45 Expression: Expression NOTEQUAL • Expression

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 125
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 98

   42 Expression: Expression OR • Expression

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 126
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 99

   37 Statement: IF LPAREN Expression RPAREN • Block
   38          | IF LPAREN Expression RPAREN • Block ELSE Block

    LBRACE  shift, and go to state 127

    Block  go to state 128


State 100

   52 AdditiveExpr: AdditiveExpr MINUS • MultiplicativeExpr

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    MultiplicativeExpr  go to state 129
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 101

   51 AdditiveExpr: AdditiveExpr PLUS • MultiplicativeExpr

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    MultiplicativeExpr  go to state 130
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 102

   55 MultiplicativeExpr: MultiplicativeExpr DIV • BitwiseExpr

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    BitwiseExpr  go to state 131
    UnaryExpr    go to state 72
    AbsExpr      go to state 73
    PrimaryExpr  go to state 74


State 103

   54 MultiplicativeExpr: MultiplicativeExpr MUL • BitwiseExpr

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    BitwiseExpr  go to state 132
    UnaryExpr    go to state 72
    AbsExpr      go to state 73
    PrimaryExpr  go to state 74


State 104

   57 BitwiseExpr: BitwiseExpr XOR • UnaryExpr

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    UnaryExpr    go to state 133
    AbsExpr      go to state 73
    PrimaryExpr  go to state 74


State 105

   39 Statement: WHILE LPAREN Expression RPAREN • Block

    LBRACE  shift, and go to state 127

    Block  go to state 134


State 106

   21 Declaration: VAR IDList COLON ArrayType • SEMICOLON
   31 ArrayType: ArrayType • LBRACKET INT_LITERAL RBRACKET

    SEMICOLON  shift, and go to state 135
    LBRACKET   shift, and go to state 136


State 107

   29 Init: IDList COLON Type • OptionalInit
   30 ArrayType: Type • LBRACKET INT_LITERAL RBRACKET
   32          | Type • LBRACKET RBRACKET

    EQUAL     shift, and go to state 137
    LBRACKET  shift, and go to state 138

    $default  reduce using rule 23 (OptionalInit)

    OptionalInit  go to state 139


State 108

   29 Init: IDList • COLON Type OptionalInit

    COLON  shift, and go to state 140


State 109

   28 InitList: Init COMMA InitList •

    $default  reduce using rule 28 (InitList)


State 110

   35 Statement: IDENTIFIER EQUAL Expression SEMICOLON •

    $default  reduce using rule 35 (Statement)


State 111

   36 Statement: IDENTIFIER LBRACKET Expression RBRACKET • EQUAL Expression SEMICOLON

    EQUAL  shift, and go to state 141


State 112

   16 ReturnStatement: RETURN Expression SEMICOLON •

    $default  reduce using rule 16 (ReturnStatement)


State 113

   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression
   77 NonEmptyArgumentList: Expression •
   78                     | Expression • COMMA NonEmptyArgumentList

    AND       shift, and go to state 91
    EQUALS    shift, and go to state 92
    GT        shift, and go to state 93
    GTE       shift, and go to state 94
    LT        shift, and go to state 95
    LTE       shift, and go to state 96
    NOTEQUAL  shift, and go to state 97
    OR        shift, and go to state 98
    COMMA     shift, and go to state 142

    $default  reduce using rule 77 (NonEmptyArgumentList)


State 114

   68 PrimaryExpr: IDENTIFIER LPAREN ArgumentList • RPAREN

    RPAREN  shift, and go to state 143


State 115

   76 ArgumentList: NonEmptyArgumentList •

    $default  reduce using rule 76 (ArgumentList)


State 116

   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression
   69 PrimaryExpr: IDENTIFIER LBRACKET Expression • RBRACKET

    AND       shift, and go to state 91
    EQUALS    shift, and go to state 92
    GT        shift, and go to state 93
    GTE       shift, and go to state 94
    LT        shift, and go to state 95
    LTE       shift, and go to state 96
    NOTEQUAL  shift, and go to state 97
    OR        shift, and go to state 98
    RBRACKET  shift, and go to state 144


State 117

   67 PrimaryExpr: LPAREN Expression RPAREN •

    $default  reduce using rule 67 (PrimaryExpr)


State 118

   64 AbsExpr: BAR Expression BAR •

    $default  reduce using rule 64 (AbsExpr)


State 119

   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   43           | Expression AND Expression •
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    EQUALS    shift, and go to state 92
    GT        shift, and go to state 93
    GTE       shift, and go to state 94
    LT        shift, and go to state 95
    LTE       shift, and go to state 96
    NOTEQUAL  shift, and go to state 97

    $default  reduce using rule 43 (Expression)


State 120

   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   44           | Expression EQUALS Expression •
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    GT   shift, and go to state 93
    GTE  shift, and go to state 94
    LT   shift, and go to state 95
    LTE  shift, and go to state 96

    $default  reduce using rule 44 (Expression)


State 121

   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   48           | Expression GT Expression •
   49           | Expression • GTE Expression

    $default  reduce using rule 48 (Expression)


State 122

   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression
   49           | Expression GTE Expression •

    $default  reduce using rule 49 (Expression)


State 123

   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   46           | Expression LT Expression •
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    $default  reduce using rule 46 (Expression)


State 124

   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   47           | Expression LTE Expression •
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    $default  reduce using rule 47 (Expression)


State 125

   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   45           | Expression NOTEQUAL Expression •
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    GT   shift, and go to state 93
    GTE  shift, and go to state 94
    LT   shift, and go to state 95
    LTE  shift, and go to state 96

    $default  reduce using rule 45 (Expression)


State 126

   42 Expression: Expression • OR Expression
   42           | Expression OR Expression •
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    AND       shift, and go to state 91
    EQUALS    shift, and go to state 92
    GT        shift, and go to state 93
    GTE       shift, and go to state 94
    LT        shift, and go to state 95
    LTE       shift, and go to state 96
    NOTEQUAL  shift, and go to state 97

    $default  reduce using rule 42 (Expression)


State 127

   17 Block: LBRACE • Declarations Statements RBRACE

    VAR        shift, and go to state 31
    PROCEDURE  shift, and go to state 1

    PROCEDURE  [reduce using rule 18 (Declarations)]
    $default   reduce using rule 18 (Declarations)

    Procedure     go to state 53
    Declarations  go to state 145
    Declaration   go to state 37


State 128

   37 Statement: IF LPAREN Expression RPAREN Block •
   38          | IF LPAREN Expression RPAREN Block • ELSE Block

    ELSE  shift, and go to state 146

    $default  reduce using rule 37 (Statement)


State 129

   52 AdditiveExpr: AdditiveExpr MINUS MultiplicativeExpr •
   54 MultiplicativeExpr: MultiplicativeExpr • MUL BitwiseExpr
   55                   | MultiplicativeExpr • DIV BitwiseExpr

    DIV  shift, and go to state 102
    MUL  shift, and go to state 103

    $default  reduce using rule 52 (AdditiveExpr)


State 130

   51 AdditiveExpr: AdditiveExpr PLUS MultiplicativeExpr •
   54 MultiplicativeExpr: MultiplicativeExpr • MUL BitwiseExpr
   55                   | MultiplicativeExpr • DIV BitwiseExpr

    DIV  shift, and go to state 102
    MUL  shift, and go to state 103

    $default  reduce using rule 51 (AdditiveExpr)


State 131

   55 MultiplicativeExpr: MultiplicativeExpr DIV BitwiseExpr •
   57 BitwiseExpr: BitwiseExpr • XOR UnaryExpr

    XOR  shift, and go to state 104

    $default  reduce using rule 55 (MultiplicativeExpr)


State 132

   54 MultiplicativeExpr: MultiplicativeExpr MUL BitwiseExpr •
   57 BitwiseExpr: BitwiseExpr • XOR UnaryExpr

    XOR  shift, and go to state 104

    $default  reduce using rule 54 (MultiplicativeExpr)


State 133

   57 BitwiseExpr: BitwiseExpr XOR UnaryExpr •

    $default  reduce using rule 57 (BitwiseExpr)


State 134

   39 Statement: WHILE LPAREN Expression RPAREN Block •

    $default  reduce using rule 39 (Statement)


State 135

   21 Declaration: VAR IDList COLON ArrayType SEMICOLON •

    $default  reduce using rule 21 (Declaration)


State 136

   31 ArrayType: ArrayType LBRACKET • INT_LITERAL RBRACKET

    INT_LITERAL  shift, and go to state 147


State 137

   24 OptionalInit: EQUAL • InitValues

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    InitValues          go to state 148
    Expression          go to state 149
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 138

   30 ArrayType: Type LBRACKET • INT_LITERAL RBRACKET
   32          | Type LBRACKET • RBRACKET

    INT_LITERAL  shift, and go to state 150
    RBRACKET     shift, and go to state 151


State 139

   29 Init: IDList COLON Type OptionalInit •

    $default  reduce using rule 29 (Init)


State 140

   29 Init: IDList COLON • Type OptionalInit

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    STRING   shift, and go to state 23
    INTPTR   shift, and go to state 24
    CHARPTR  shift, and go to state 25

    Type  go to state 152


State 141

   36 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL • Expression SEMICOLON

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression          go to state 153
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 142

   78 NonEmptyArgumentList: Expression COMMA • NonEmptyArgumentList

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    Expression            go to state 113
    AdditiveExpr          go to state 69
    MultiplicativeExpr    go to state 70
    BitwiseExpr           go to state 71
    UnaryExpr             go to state 72
    AbsExpr               go to state 73
    PrimaryExpr           go to state 74
    NonEmptyArgumentList  go to state 154


State 143

   68 PrimaryExpr: IDENTIFIER LPAREN ArgumentList RPAREN •

    $default  reduce using rule 68 (PrimaryExpr)


State 144

   69 PrimaryExpr: IDENTIFIER LBRACKET Expression RBRACKET •

    $default  reduce using rule 69 (PrimaryExpr)


State 145

   17 Block: LBRACE Declarations • Statements RBRACE

    IF          shift, and go to state 29
    WHILE       shift, and go to state 30
    PROCEDURE   shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    LBRACE      shift, and go to state 33

    $default  reduce using rule 33 (Statements)

    Procedure   go to state 47
    Statements  go to state 155
    Statement   go to state 39


State 146

   38 Statement: IF LPAREN Expression RPAREN Block ELSE • Block

    LBRACE  shift, and go to state 127

    Block  go to state 156


State 147

   31 ArrayType: ArrayType LBRACKET INT_LITERAL • RBRACKET

    RBRACKET  shift, and go to state 157


State 148

   24 OptionalInit: EQUAL InitValues •

    $default  reduce using rule 24 (OptionalInit)


State 149

   25 InitValues: Expression •
   26           | Expression • COMMA InitValues
   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    AND       shift, and go to state 91
    EQUALS    shift, and go to state 92
    GT        shift, and go to state 93
    GTE       shift, and go to state 94
    LT        shift, and go to state 95
    LTE       shift, and go to state 96
    NOTEQUAL  shift, and go to state 97
    OR        shift, and go to state 98
    COMMA     shift, and go to state 158

    COMMA     [reduce using rule 25 (InitValues)]
    $default  reduce using rule 25 (InitValues)


State 150

   30 ArrayType: Type LBRACKET INT_LITERAL • RBRACKET

    RBRACKET  shift, and go to state 159


State 151

   32 ArrayType: Type LBRACKET RBRACKET •

    $default  reduce using rule 32 (ArrayType)


State 152

   29 Init: IDList COLON Type • OptionalInit

    EQUAL  shift, and go to state 137

    $default  reduce using rule 23 (OptionalInit)

    OptionalInit  go to state 139


State 153

   36 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL Expression • SEMICOLON
   42 Expression: Expression • OR Expression
   43           | Expression • AND Expression
   44           | Expression • EQUALS Expression
   45           | Expression • NOTEQUAL Expression
   46           | Expression • LT Expression
   47           | Expression • LTE Expression
   48           | Expression • GT Expression
   49           | Expression • GTE Expression

    AND        shift, and go to state 91
    EQUALS     shift, and go to state 92
    GT         shift, and go to state 93
    GTE        shift, and go to state 94
    LT         shift, and go to state 95
    LTE        shift, and go to state 96
    NOTEQUAL   shift, and go to state 97
    OR         shift, and go to state 98
    SEMICOLON  shift, and go to state 160


State 154

   78 NonEmptyArgumentList: Expression COMMA NonEmptyArgumentList •

    $default  reduce using rule 78 (NonEmptyArgumentList)


State 155

   17 Block: LBRACE Declarations Statements • RBRACE

    RBRACE  shift, and go to state 161


State 156

   38 Statement: IF LPAREN Expression RPAREN Block ELSE Block •

    $default  reduce using rule 38 (Statement)


State 157

   31 ArrayType: ArrayType LBRACKET INT_LITERAL RBRACKET •

    $default  reduce using rule 31 (ArrayType)


State 158

   26 InitValues: Expression COMMA • InitValues

    NULLTOKEN       shift, and go to state 56
    MINUS           shift, and go to state 57
    NOT             shift, and go to state 58
    AMP             shift, and go to state 59
    TRUE            shift, and go to state 60
    FALSE           shift, and go to state 61
    INT_LITERAL     shift, and go to state 62
    IDENTIFIER      shift, and go to state 63
    LPAREN          shift, and go to state 64
    BAR             shift, and go to state 65
    STRING_LITERAL  shift, and go to state 66
    CHAR_LITERAL    shift, and go to state 67

    InitValues          go to state 162
    Expression          go to state 149
    AdditiveExpr        go to state 69
    MultiplicativeExpr  go to state 70
    BitwiseExpr         go to state 71
    UnaryExpr           go to state 72
    AbsExpr             go to state 73
    PrimaryExpr         go to state 74


State 159

   30 ArrayType: Type LBRACKET INT_LITERAL RBRACKET •

    $default  reduce using rule 30 (ArrayType)


State 160

   36 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL Expression SEMICOLON •

    $default  reduce using rule 36 (Statement)


State 161

   17 Block: LBRACE Declarations Statements RBRACE •

    $default  reduce using rule 17 (Block)


State 162

   26 InitValues: Expression COMMA InitValues •

    $default  reduce using rule 26 (InitValues)
